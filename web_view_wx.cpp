// Author: Hal Finkel

#include <web_view.h>

#include <wx/wxprec.h>
#ifndef WX_PRECOMP
#include <wx/wx.h>
#endif

#if !wxUSE_WEBVIEW_WEBKIT && !wxUSE_WEBVIEW_WEBKIT2 && !wxUSE_WEBVIEW_IE
#error "A wxWebView backend is required"
#endif

#include <web_view_wx_export.h> // Generated by CMake.

using namespace wv;
namespace web_view_detail {
  struct web_view_wx_EXPORT impl_wx : public impl {
#if wxUSE_WEBVIEW_IE
    void EnableIEFeature(const wxChar *key_name, long value) {
      wxRegKey key(wxRegKey::HKCU, IE_EMULATION_KEY);
      if (!key.Exists())
        return;

      const wxString programName = wxGetFullModuleName().AfterLast('\\');
      key.SetValue(programName, value);
    }

    long GetIEVersion() {
      wxRegKey key(wxRegKey::HKLM, "Software\\Microsoft\\Internet Explorer");
      wxString value;
      if (!key.QueryValue("Version", value))
        return 0;

      long version = wxAtoi(value);      
      if (version == 9) {
        // Version reports 9.x for all versions >= than 9. The real version is
        // in svcVersion for later versions. See:
        //   https://blogs.msdn.microsoft.com/ieinternals/2014/02/19/everybody-lies/
        if (key.QueryValue("svcVersion", value))
          version = wxAtoi(value);
      }

      return version;
    }

    void SetupIEFeatures() {
      // For additional information on these keys, see:
      //   https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/general-info/ee330720(v=vs.85)
      // By default, GPU acceleration is not enabled. Enable it for this application.
      EnableIEFeature("Software\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_GPU_RENDERING", 1);

      int IEVersion = GetIEVersion();
      if (IEVersion) {
        long EmulVal = IEVersion * 1000;

	    // Disable emulation of previous browser versions (by selecting the current version). The default is IE7.
	    EnableIEFeature("Software\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BROWSER_EMULATION", EmulVal);

        // Note that wxWebViewIE::MSWSetModernEmulationLevel only sets the emulation level to IE8, which is already old,
        // and does not set these other features.
      }

      // This feature is undocumented, unfortunately, but is discussed here:
      //   http://zett42.de/software/2013/04/04/performance-issue-of-embedded-ie-browser-control-and-how-to-fix-it/
      EnableIEFeature(L"Software\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_ALIGNED_TIMERS", 1);
    }
#endif // wxUSE_WEBVIEW_IE

    impl_wx(const std::string &title) {
#if wxUSE_WEBVIEW_IE
      SetupIEFeatures();
#endif


    }

    virtual ~impl_win32() override { 


    }

    virtual std::future<std::error_code> display_html_from_uri(const std::string &uri) override {

    }

    virtual std::future<std::error_code> display_html(std::string_view html,
                                                      const std::string &effective_uri) override {
      std::promise<int> P;

      P.set_value(...);
      return P.get_future();
    }

    virtual bool register_uri_scheme_handler(const std::string &scheme,
                                             const HandlerFunc &func) override {

    }
  };

  web_view_wx_EXPORT impl *make_web_view_detail(const std::string &title) {
    return new impl_wx(title);
  }
}

